/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package JFrames;


import Contenido.ContenidovIan;
import Genero.Genero;
import Persona.Usuario;
import funciones.FuncionesBBDD;
import static funciones.FuncionesBBDD.*;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author lauav
 */
public class GestorContenidoMain extends javax.swing.JFrame {

    int x, y, xMouse, yMouse;
    ArrayList listaPeliculas;
    ArrayList listaSeries;
    ArrayList listaGeneros;
    ArrayList listaGenCon;
    DefaultListModel defaultListmodel = new DefaultListModel();

    private ArrayList getContenidos() {
        ArrayList<String> stars = new ArrayList<String>();
        try {
            Connection conn = connect2();
            String SQL = "SELECT Nombre FROM `contenido`";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {
                String nom = rs.getString("Nombre");
                stars.add(nom);
            }
        } catch (SQLException ex) {
        }

        return stars;
    }



    @SuppressWarnings("unchecked")
    private void contenidoFiltrado(String searchTerm) {
        DefaultListModel filtrado = new DefaultListModel<>();
        ArrayList stars = getContenidos();
        stars.stream().forEach((star) -> {
            String starName = star.toString().toLowerCase();
            if (starName.contains(searchTerm.toLowerCase())) {
                filtrado.addElement(star);
            }
        });
        defaultListmodel = filtrado;
        listaContenidos.setModel(defaultListmodel);

    }

    /**
     * Creates new form GestorContenidoMain
     *
     * @throws java.lang.ClassNotFoundException
     */
    public GestorContenidoMain(String nUser) throws ClassNotFoundException {
        initComponents();
        busquedaContenido.setVisible(false);
        //llenar listas
        listaPeliculas = new ArrayList();
        listaSeries = new ArrayList();
        listaGeneros = new ArrayList();

        //lleno la lista de generos
        llenarCBGenero();

    }

    //Funciones para cargar la lista de peliculas y series en los comboBox
    public void llenarCBPeliculas() throws ClassNotFoundException {
        //vacio el comboBoxPeliculas
        jCoBoContenido.removeAllItems();
        String sql = "SELECT * FROM contenido WHERE tipo='Peliculas'";
        listaPeliculas = FuncionesBBDD.getListas(sql, "Contenidos");
        Iterator itListaPelis = listaPeliculas.iterator();
        while (itListaPelis.hasNext()) {
            ContenidovIan nContenido = (ContenidovIan) itListaPelis.next();
            jCoBoContenido.addItem(nContenido.toString());

        }

    }

    public void llenarCBSeries() throws ClassNotFoundException {
        //vacio el comboBoxSeries
        jCoBoContenido.removeAllItems();
        String sql = "SELECT * FROM contenido WHERE tipo='Series'";
        listaSeries = FuncionesBBDD.getListas(sql, "Contenidos");
        Iterator itListaSeries = listaSeries.iterator();
        while (itListaSeries.hasNext()) {
            ContenidovIan nContenido = (ContenidovIan) itListaSeries.next();
            jCoBoContenido.addItem(nContenido.toString());

        }

    }

    public void llenarCBGenero() throws ClassNotFoundException {
        //vacio el comboBoxPeliculas
        jCoBoGenero.removeAllItems();
        jCoBoGenEliminar.removeAllItems();
        String sql = "SELECT * FROM genero";
        listaGeneros = FuncionesBBDD.getListas(sql, "Generos");
        Iterator itListaGeneros = listaGeneros.iterator();
        while (itListaGeneros.hasNext()) {
            Genero nGenero = (Genero) itListaGeneros.next();
            jCoBoGenero.addItem(nGenero.toString());
            jCoBoGenEliminar.addItem(nGenero.toString());

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        jPanel9 = new javax.swing.JPanel();
        nombreContenido = new javax.swing.JTextField();
        busquedaContenido = new javax.swing.JScrollPane();
        listaContenidos = new javax.swing.JList<>();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jRaPeliAñadir = new javax.swing.JRadioButton();
        jRaSerieAñadir = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFiNombre = new javax.swing.JTextField();
        jTextFiDesc = new javax.swing.JTextField();
        jTextFiDur = new javax.swing.JTextField();
        jSpinnerTemp = new javax.swing.JSpinner();
        jTextFiDir = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jCoBoGenero = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jBuBorrar = new javax.swing.JButton();
        jRaPeliEliminar = new javax.swing.JRadioButton();
        jRaSeriesEliminar = new javax.swing.JRadioButton();
        jCoBoContenido = new javax.swing.JComboBox<>();
        mostrarContenido = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jBuAñadirGen = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jTeFiNombreGenA = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jBuEliminarGen = new javax.swing.JButton();
        jCoBoGenEliminar = new javax.swing.JComboBox<>();
        perfil = new javax.swing.JButton();
        paginaPrincipal = new javax.swing.JButton();
        cerrarSesion = new javax.swing.JButton();
        cerrarPrograma = new javax.swing.JLabel();
        imagenColorFondo2 = new javax.swing.JLabel();

        jMenu1.setText("jMenu1");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nombreContenido.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        nombreContenido.setBorder(null);
        nombreContenido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nombreContenidoMouseClicked(evt);
            }
        });
        nombreContenido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreContenidoActionPerformed(evt);
            }
        });
        nombreContenido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombreContenidoKeyReleased(evt);
            }
        });
        jPanel9.add(nombreContenido, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 360, 30));

        listaContenidos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaContenidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaContenidosMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                listaContenidosMouseExited(evt);
            }
        });
        busquedaContenido.setViewportView(listaContenidos);

        jPanel9.add(busquedaContenido, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, 360, 100));

        jLabel1.setText("Nombre:");

        buttonGroup1.add(jRaPeliAñadir);
        jRaPeliAñadir.setText("Película");
        jRaPeliAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRaPeliAñadirActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRaSerieAñadir);
        jRaSerieAñadir.setText("Serie");
        jRaSerieAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRaSerieAñadirActionPerformed(evt);
            }
        });

        jLabel2.setText("Descripción:");

        jLabel3.setText("Director:");

        jLabel4.setText("Temporadas:(series)");

        jLabel5.setText("Duración: (mins)");

        jTextFiNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFiNombreActionPerformed(evt);
            }
        });

        jSpinnerTemp.setModel(new javax.swing.SpinnerNumberModel());
        jSpinnerTemp.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTextFiDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFiDirActionPerformed(evt);
            }
        });

        jButton4.setText("Añadir a BBDD");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel8.setText("Género:");

        jCoBoGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jCoBoGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFiDur, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jRaPeliAñadir)
                                        .addGap(18, 18, 18)
                                        .addComponent(jRaSerieAñadir))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(jSpinnerTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel3))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextFiNombre)
                                            .addComponent(jTextFiDesc)
                                            .addComponent(jTextFiDir, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(248, 248, 248)
                                        .addComponent(jButton4)))
                                .addGap(0, 125, Short.MAX_VALUE)))
                        .addContainerGap(148, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRaPeliAñadir)
                    .addComponent(jRaSerieAñadir))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFiNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFiDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFiDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jSpinnerTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFiDur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jCoBoGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(183, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Añadir", jPanel4);

        jBuBorrar.setText("Eliminar");
        jBuBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBuBorrarActionPerformed(evt);
            }
        });

        buttonGroup6.add(jRaPeliEliminar);
        jRaPeliEliminar.setText("Películas");
        jRaPeliEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRaPeliEliminarActionPerformed(evt);
            }
        });

        buttonGroup6.add(jRaSeriesEliminar);
        jRaSeriesEliminar.setText("Series");

        jCoBoContenido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCoBoContenidoActionPerformed(evt);
            }
        });

        mostrarContenido.setText("Mostrar");
        mostrarContenido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarContenidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(402, 402, 402)
                        .addComponent(jLabel7))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jRaPeliEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRaSeriesEliminar)
                        .addGap(44, 44, 44)
                        .addComponent(mostrarContenido))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jCoBoContenido, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBuBorrar)))
                .addContainerGap(171, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel7))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRaPeliEliminar)
                            .addComponent(jRaSeriesEliminar)
                            .addComponent(mostrarContenido))))
                .addGap(39, 39, 39)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCoBoContenido, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBuBorrar))
                .addContainerGap(334, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Eliminar", jPanel3);

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jBuAñadirGen.setText("Añadir");
        jBuAñadirGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBuAñadirGenActionPerformed(evt);
            }
        });

        jLabel9.setText("Nombre:");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTeFiNombreGenA, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                .addComponent(jBuAñadirGen)
                .addGap(33, 33, 33))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBuAñadirGen)
                    .addComponent(jLabel9)
                    .addComponent(jTeFiNombreGenA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(104, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jBuEliminarGen.setText("Eliminar");
        jBuEliminarGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBuEliminarGenActionPerformed(evt);
            }
        });

        jCoBoGenEliminar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCoBoGenEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCoBoGenEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jCoBoGenEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 248, Short.MAX_VALUE)
                .addComponent(jBuEliminarGen)
                .addGap(26, 26, 26))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBuEliminarGen)
                    .addComponent(jCoBoGenEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Géneros", jPanel5);

        jPanel9.add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, -1, -1));

        perfil.setBackground(new java.awt.Color(0, 0, 0));
        perfil.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        perfil.setForeground(new java.awt.Color(255, 255, 255));
        perfil.setText("Perfil");
        perfil.setBorder(null);
        perfil.setBorderPainted(false);
        perfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perfilActionPerformed(evt);
            }
        });
        jPanel9.add(perfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 0, 110, 50));

        paginaPrincipal.setBackground(new java.awt.Color(0, 0, 0));
        paginaPrincipal.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        paginaPrincipal.setForeground(new java.awt.Color(255, 255, 255));
        paginaPrincipal.setText("Pagina Principal");
        paginaPrincipal.setBorder(null);
        paginaPrincipal.setBorderPainted(false);
        paginaPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paginaPrincipalActionPerformed(evt);
            }
        });
        jPanel9.add(paginaPrincipal, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 130, 50));

        cerrarSesion.setBackground(new java.awt.Color(0, 0, 0));
        cerrarSesion.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        cerrarSesion.setForeground(new java.awt.Color(255, 255, 255));
        cerrarSesion.setText("Cerrar Sesión");
        cerrarSesion.setBorder(null);
        cerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarSesionActionPerformed(evt);
            }
        });
        jPanel9.add(cerrarSesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 0, 130, 50));

        cerrarPrograma.setBackground(new java.awt.Color(153, 0, 0));
        cerrarPrograma.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        cerrarPrograma.setForeground(new java.awt.Color(255, 255, 255));
        cerrarPrograma.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cerrarPrograma.setText("X");
        cerrarPrograma.setOpaque(true);
        cerrarPrograma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cerrarProgramaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cerrarProgramaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cerrarProgramaMouseExited(evt);
            }
        });
        jPanel9.add(cerrarPrograma, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 0, 50, 50));

        imagenColorFondo2.setBackground(new java.awt.Color(153, 0, 0));
        imagenColorFondo2.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        imagenColorFondo2.setOpaque(true);
        imagenColorFondo2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                imagenColorFondo2MouseDragged(evt);
            }
        });
        imagenColorFondo2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                imagenColorFondo2MousePressed(evt);
            }
        });
        jPanel9.add(imagenColorFondo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * rellena el combobox segun lo que este seleccionado en el checkbutton
     *
     */
    private void cargarTipoSeleccionado() {
        if (jRaPeliEliminar.isSelected()) {
            try {
                llenarCBPeliculas();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(GestorContenidoMain.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else if (jRaSeriesEliminar.isSelected()) {
            try {
                llenarCBSeries();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(GestorContenidoMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            jCoBoContenido.addItem("Selecciona películas o series");
        }
    }
    private void perfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perfilActionPerformed
        dispose();
        PerfilJFrame p1 =new PerfilJFrame();
        p1.setVisible(true);
    }//GEN-LAST:event_perfilActionPerformed

    private void paginaPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paginaPrincipalActionPerformed
        dispose(); // TODO add your handling code here:
        Principal p1 = new Principal();
        p1.setVisible(true);
    }//GEN-LAST:event_paginaPrincipalActionPerformed

    private void cerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarSesionActionPerformed
        dispose();
        LoginJFrame l1 = new LoginJFrame();
        l1.setVisible(true);
        Usuario.vaciarUsuario();
        close();
        pararSonido();
    }//GEN-LAST:event_cerrarSesionActionPerformed

    private void cerrarProgramaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarProgramaMouseClicked
        System.exit(0);// TODO add your handling code here:
    }//GEN-LAST:event_cerrarProgramaMouseClicked

    private void cerrarProgramaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarProgramaMouseEntered
        cerrarPrograma.setBackground(new Color(230, 0, 0));
        cerrarPrograma.setForeground(Color.black);
    }//GEN-LAST:event_cerrarProgramaMouseEntered

    private void cerrarProgramaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarProgramaMouseExited
        cerrarPrograma.setBackground(new Color(153, 0, 0));
        cerrarPrograma.setForeground(Color.white);
    }//GEN-LAST:event_cerrarProgramaMouseExited

    private void imagenColorFondo2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imagenColorFondo2MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_imagenColorFondo2MouseDragged

    private void imagenColorFondo2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imagenColorFondo2MousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_imagenColorFondo2MousePressed

    private void jCoBoGenEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCoBoGenEliminarActionPerformed

    }//GEN-LAST:event_jCoBoGenEliminarActionPerformed

    private void jBuEliminarGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBuEliminarGenActionPerformed
        // TODO add your handling code here:
        //Recojo el valor del comboBox
        String generoEliminar = jCoBoGenEliminar.getSelectedItem().toString();
        //el id estará en [0]
        String[] partesGenEliminar = generoEliminar.split("-");
        try {
            //elimino en bbdd
            FuncionesBBDD.borrarRegistro(partesGenEliminar[0], "Genero");
        } catch (SQLException ex) {
            Logger.getLogger(GestorContenidoMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        //cargo de nuevo los generos
        try {

            llenarCBGenero();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GestorContenidoMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBuEliminarGenActionPerformed

    private void jBuAñadirGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBuAñadirGenActionPerformed
        // TODO add your handling code here:
        //Recojo el valor del nombre del género
        String nombreGen = jTeFiNombreGenA.getText();
        boolean insertGenOK = true;
        String mErrorGen = "Errores: \n";

        //compruebo que el campo nombre no esté vacío
        int longNombreGen = nombreGen.length();
        if (longNombreGen == 0) {
            insertGenOK = false;
        }

        //inserto en bbdd el nuevo genero
        if (insertGenOK = true) {
            try {
                FuncionesBBDD.añadirGenero(nombreGen);
                //actualizo con comboBox de género con el nuevo registro
                llenarCBGenero();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(GestorContenidoMain.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(GestorContenidoMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            //muestro los errores
            String mensajeFinal = "No se ha podido insertar el género por errores en los datos dados." + mErrorGen;
            JOptionPane.showMessageDialog(null, mensajeFinal, "Error de inserción", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jBuAñadirGenActionPerformed

    private void mostrarContenidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarContenidoActionPerformed
        //
        cargarTipoSeleccionado();
    }//GEN-LAST:event_mostrarContenidoActionPerformed

    private void jCoBoContenidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCoBoContenidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCoBoContenidoActionPerformed

    private void jRaPeliEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRaPeliEliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRaPeliEliminarActionPerformed

    private void jBuBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBuBorrarActionPerformed
        // TODO add your handling code here:
        //BOTON DE BORRARR
        //descompongo el id y el nombre y llamo a la funcion eliminarContenido
        String contenido = jCoBoContenido.getSelectedItem().toString();
        String[] partesContenido = contenido.split("-");

        try {
            FuncionesBBDD.borrarRegistro(partesContenido[0], "Contenido");

            //System.out.println(contenido);
        } catch (SQLException ex) {
            Logger.getLogger(GestorContenidoMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        //al acabar de borrar volvemos a cargar o actualizar el combobox
        cargarTipoSeleccionado();

        //al borrar el registro de contenido, los registros de generoContenido
        //que tuvieran como idContenido el que acabamos de borrar, se borra tambien
        //ya que en bbdd está como ON DELETE CASCADE
    }//GEN-LAST:event_jBuBorrarActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //recojo los datos

        boolean insertOK = true;
        String mError = "";

        //recojo los datos de los TextField
        String nombre = jTextFiNombre.getText();
        String descripcion = jTextFiDesc.getText();
        String director = jTextFiDir.getText();
        int temporadas = (Integer) jSpinnerTemp.getValue();
        String duracion = jTextFiDur.getText();
        String tipo = "ninguno";
        String genero = jCoBoGenero.getSelectedItem().toString();
        //separo el id del nombre para luego insertarlo en generoContenido en bbdd
        String[] partesGenero = genero.split("-");

        //compruebo que los campos comunes a series y pelis no estén vacios
        //las temporadas se controlan si se ha elegido serie
        int longNombre = nombre.length();
        int longDesc = descripcion.length();
        int longDir = director.length();
        int longDur = duracion.length();

        if (longNombre == 0 || longDesc == 0 || longDir == 0) {
            insertOK = false;
            mError = mError + "\n |Comprueba que has rellenado los campos de nombre, descripción y director.|";

        }

        //tipo de contenido con checkbox
        if (jRaPeliAñadir.isSelected()) {
            tipo = "Peliculas";
            //ha de tener duración
            if (longDur == 0) {
                insertOK = false;
                mError = mError + "\n |Una película ha de tener duración|";
            }
            //no ha de tener temporadas
            if (temporadas > 0) {
                insertOK = false;
                mError = mError + "\n |Una película no ha de tener temporadas|";
            }
        } else if (jRaSerieAñadir.isSelected()) {
            tipo = "Series";
            //si es serie tiene que tener temporadas, más de 0
            if (temporadas <= 0) {
                insertOK = false;
                mError = mError + "\n |Una serie ha de tener más de 0 temporadas|";
            }
            //si se ha introducido duración, la seteamos vacia.
            if (longDur > 0) {
                duracion = "";
            }
        } else {
            insertOK = false;
            mError = mError + "\n |No has selecionado el tipo de contenido(Película/Serie)|";
        }

        System.out.println("Errores" + mError);
        //HACER UN JOPTIONPANE

        //inserto el nuevo registro en bbdd
        if (insertOK == true) {
            //llamo a la funcion para insertar contenido

            try {
                FuncionesBBDD.añadirContenido(nombre, descripcion, director, temporadas, duracion, tipo);
                //falta insertar la imagen
                System.out.println("Se ha insertado el contenido");
                //vacio los campos:
                jTextFiNombre.setText("");
                jTextFiDesc.setText("");
                jTextFiDir.setText("");
                jSpinnerTemp.setValue(0.0);
                jTextFiDur.setText("");

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(GestorContenidoMain.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(GestorContenidoMain.class.getName()).log(Level.SEVERE, null, ex);
            }

            int idCont = 0;
            //saco el id del genero del array con el que cargo los generos
            int idGen = Integer.parseInt(partesGenero[0]);
            //saco el id del contenido con una consulta
            idCont = FuncionesBBDD.getIdCont(nombre);
            System.out.println(idCont);

            //insertar generoContenido del nuevo contenido
            try {
                FuncionesBBDD.añadirGeneroContenido(idCont, idGen);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(GestorContenidoMain.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(GestorContenidoMain.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            //muestro los errores
            String mensajeFinal = "No se ha podido insertar el contenido por errores en los datos dados." + mError;
            JOptionPane.showMessageDialog(null, mensajeFinal, "Error de inserción", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextFiDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFiDirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFiDirActionPerformed

    private void jTextFiNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFiNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFiNombreActionPerformed

    private void jRaSerieAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRaSerieAñadirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRaSerieAñadirActionPerformed

    private void jRaPeliAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRaPeliAñadirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRaPeliAñadirActionPerformed

    private void nombreContenidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nombreContenidoMouseClicked
        listaContenidos.setVisible(true);
        busquedaContenido.setVisible(true);

    }//GEN-LAST:event_nombreContenidoMouseClicked

    private void nombreContenidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreContenidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreContenidoActionPerformed

    private void nombreContenidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreContenidoKeyReleased
        contenidoFiltrado(nombreContenido.getText());
    }//GEN-LAST:event_nombreContenidoKeyReleased

    private void listaContenidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaContenidosMouseClicked
        //JOptionPane.showMessageDialog(rootPane,listaContenidos.getSelectedValue(),"Nombre Elegido",JOptionPane.INFORMATION_MESSAGE);
        String Peli = new String(listaContenidos.getSelectedValue());
        System.out.println(Peli);
        int idPeli = FuncionesBBDD.getIdCont(Peli);
        try {
            PaginaPeliV1 p1 = new PaginaPeliV1(idPeli, Usuario.user1.getId());
            dispose();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_listaContenidosMouseClicked

    private void listaContenidosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaContenidosMouseExited
        busquedaContenido.setVisible(false);
    }//GEN-LAST:event_listaContenidosMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane busquedaContenido;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.JLabel cerrarPrograma;
    private javax.swing.JButton cerrarSesion;
    private javax.swing.JLabel imagenColorFondo2;
    private javax.swing.JButton jBuAñadirGen;
    private javax.swing.JButton jBuBorrar;
    private javax.swing.JButton jBuEliminarGen;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jCoBoContenido;
    private javax.swing.JComboBox<String> jCoBoGenEliminar;
    private javax.swing.JComboBox<String> jCoBoGenero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRaPeliAñadir;
    private javax.swing.JRadioButton jRaPeliEliminar;
    private javax.swing.JRadioButton jRaSerieAñadir;
    private javax.swing.JRadioButton jRaSeriesEliminar;
    private javax.swing.JSpinner jSpinnerTemp;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField jTeFiNombreGenA;
    private javax.swing.JTextField jTextFiDesc;
    private javax.swing.JTextField jTextFiDir;
    private javax.swing.JTextField jTextFiDur;
    private javax.swing.JTextField jTextFiNombre;
    private javax.swing.JList<String> listaContenidos;
    private javax.swing.JButton mostrarContenido;
    private javax.swing.JTextField nombreContenido;
    private javax.swing.JButton paginaPrincipal;
    private javax.swing.JButton perfil;
    // End of variables declaration//GEN-END:variables

}
